class ProductCardRendererwishlist{constructor(t,e){this.reply=t,this.widgetSettings=e,this.template=document.getElementById("product-template-wishlist")}createCard(t){const e=this.template.content.cloneNode(!0),s=e.querySelector(".wishlist-card"),i=t.variants?.edges[0]?.node,r=i.presentmentPrices?.edges[0]?.node.price.amount||null,n=i.presentmentPrices?.edges[0]?.node.compareAtPrice?.amount||null,a=t.reviewCount?.value,l=t.rating;let o;if(l&&l.value){o=JSON.parse(l.value).value}return this.setupCardLayout(s),this.setupProductData(s,t),this.setupPriceElements(s,r,n),this.setupRatingElements(s,o,a),this.setupVariantInput(s,t),this.setupButtonHandlers(s,t),e}setupCardLayout(t){t&&(t.setAttribute("data-card-layout",this.reply.cardLayout),"horizontal"===this.reply.cardLayout?t.classList.add("wishlist-card--horizontal"):t.classList.remove("wishlist-card--horizontal"),t.style.setProperty("--show-add-to-cart",this.reply.showAddToCart?"block":"none"),t.style.setProperty("--show-buy-now",this.reply.showBuyNow?"block":"none"))}setupProductData(t,e){const s=window.WishlistUtils.extractNumericId(e.id);t.setAttribute("data-product-id",s);const i=t.querySelector(".wishlist-image-link"),r=t.querySelector(".wishlist-title"),n=t.querySelector(".wishlist-image"),a=t.querySelector(".wishlist-reviews-link");i&&(i.href=`/products/${e.handle}`),r&&(r.href=`/products/${e.handle}`),n&&(n.src=e.featuredImage.url||""),r&&(r.textContent=e.title||""),a&&(a.href=`/products/${e.handle}`);const l=t.querySelector(".wishlist-atc-button");if(l){const t=window.WishlistUtils.extractNumericId(e.id);l.setAttribute("data-product-card-swatch-id",t),l.href=`/products/${e.handle}`}const o=t.querySelector(".wishlist-buy-now-button");if(o){const t=window.WishlistUtils.extractNumericId(e.id);o.setAttribute("data-product-card-swatch-id",t),o.href=e.url}const d=e.variants?.edges?.map((t=>t.node))||[];if(0===d.length||!d.some((t=>!1!==t.availableForSale))){const e=t.querySelector(".wishlist-atc-button"),s=t.querySelector(".wishlist-buy-now-button");e&&(e.disabled=!0,e.textContent="Sold Out",e.style.opacity="0.5",e.style.pointerEvents="none"),s&&(s.disabled=!0,s.textContent="Sold Out",s.style.opacity="0.5",s.style.pointerEvents="none")}const c=t.querySelectorAll(".quick-view-btn"),h=e.variants.edges&&e.variants.edges.length>1||e.variants.edges&&1===e.variants.edges.length&&"Default Title"!==e.variants.edges[0].node.title;c.forEach((t=>{t.setAttribute("data-product",JSON.stringify(e)),t.setAttribute("data-title",encodeURIComponent(e.title)),t.setAttribute("data-has-variants",h?"true":"false")}))}setupPriceElements(t,e,s){const i=t.querySelector(".wishlist-price"),r=t.querySelector(".wishlist-compare-price"),n=t.querySelector(".wishlist-badge");if(i){const t=parseFloat(e).toFixed(2),s=String(t);i.textContent=window.CurrencyUtils.formatMoneyCurrency(s,window.money_format)}if(r){if(parseFloat(s||0)>parseFloat(e||0)){const t=parseFloat(s).toFixed(2),e=String(t);r.textContent=window.CurrencyUtils.formatMoneyCurrency(e,window.money_format),r.style.display="inline"}else r.style.display="none"}if(n){const t=parseFloat(s),i=parseFloat(e),r=Math.round((t-i)/t*100);if(!isNaN(r)&&r>0){const t=(this.widgetSettings.saveText||"Save {percent}%").split("{percent}");let e=t[1]||"",s="";e.startsWith("%")&&(s="%",e=e.slice(1)),n.innerHTML=`${t[0]}<div class="wishlist-discount-value">${r}${s}</div>${e}`,n.style.display="flex",n.style.flexDirection="row",n.style.whiteSpace="pre"}else n.style.display="none"}}setupRatingElements(t,e,s){const i=t.querySelector(".wishlist-stars"),r=t.querySelector(".wishlist-review-count");if(i&&e>0){i.style.setProperty("--rating",e),i.parentElement.classList.add("visible"),i.parentElement.style.visibility="visible";const t=(this.widgetSettings.starsText||"{count} review/reviews").replace("{count}",s);r&&(r.textContent=t)}else i&&(i.parentElement.style.visibility="hidden",i.parentElement.classList.remove("visible"))}setupVariantInput(t,e){const s=t.querySelector(".product-variant-id"),i=t.querySelector(".wishlist-form"),r=t.querySelector(".wishlist-buy-now-form");if(s)if(e.variants?.length>0&&e.variants[0].id){const t=e.variants[0].id.split("/").pop();if(s.value=t,i&&(i.setAttribute("data-product-title",e.title),i.setAttribute("data-variant-id",t)),r){r.querySelector(".product-variant-id").value=t,r.setAttribute("data-product-title",e.title),r.setAttribute("data-variant-id",t)}}else this.disableUnavailableButtons(i,r)}disableUnavailableButtons(t,e){if(t){t.style.opacity="0.5",t.style.pointerEvents="none";const e=t.querySelector("button");e&&(e.disabled=!0,e.textContent="Unavailable")}if(e){e.style.opacity="0.5",e.style.pointerEvents="none";const t=e.querySelector("button");t&&(t.disabled=!0,t.textContent="Unavailable")}}setupButtonHandlers(t,e){t.querySelector(".wishlist-form"),t.querySelector(".wishlist-buy-now-form")}}class CarouselControllerwishlist{constructor(t,e,s,i){this.carousel=t,this.prevBtn=e,this.nextBtn=s,this.cardLayout=i,this.currentIndex=0,this.cards=[],this.gap=20,this.resizeObserver=new ResizeObserver((()=>this.handleResize()))}init(){this.cards=Array.from(this.carousel.querySelectorAll(".wishlist-card")),0!==this.cards.length&&(this.cardWidth=this.cards[0].offsetWidth,this.containerWidth=this.carousel.parentElement.offsetWidth,this.maxIndex=this.calculateMaxIndex(),this.prevBtn.addEventListener("click",(()=>this.navigate(-1))),this.nextBtn.addEventListener("click",(()=>this.navigate(1))),this.resizeObserver.observe(this.carousel.parentElement),this.updateCarousel())}calculateMaxIndex(){const t=this.cardWidth+this.gap,e=Math.floor((this.containerWidth+this.gap)/t);return Math.max(0,this.cards.length-e)}navigate(t){this.currentIndex=Math.max(0,Math.min(this.currentIndex+t,this.maxIndex)),this.updateCarousel()}updateCarousel(){this.currentIndex=Math.max(0,Math.min(this.currentIndex,this.maxIndex));const t=-this.currentIndex*(this.cardWidth+this.gap);this.carousel.style.transform=`translateX(${t}px)`;const e=window.innerWidth<=600,s="horizontal"===this.cardLayout;this.nextBtn.style.display=e&&s?this.currentIndex===this.maxIndex-1?"none":"flex":this.currentIndex===this.maxIndex?"none":"flex",this.prevBtn.style.display=this.currentIndex<=0?"none":"flex"}handleResize(){this.cardWidth=this.cards[0]?.offsetWidth||this.cardWidth,this.containerWidth=this.carousel.parentElement.offsetWidth,this.maxIndex=this.calculateMaxIndex(),this.currentIndex=Math.min(this.currentIndex,this.maxIndex),this.updateCarousel()}destroy(){this.resizeObserver.disconnect(),this.prevBtn.removeEventListener("click",(()=>this.navigate(-1))),this.nextBtn.removeEventListener("click",(()=>this.navigate(1)))}}